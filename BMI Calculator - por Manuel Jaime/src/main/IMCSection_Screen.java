package main;

import fonts.CalcBMISection;
import java.text.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MANUEL JAIME
 */

public class IMCSection_Screen extends javax.swing.JFrame {

    /**
     * Creates new form IMCSection_Screen
     */
    public IMCSection_Screen() {
        initComponents();
        
        
        setIcon();
        
         // try...catch para a fonte geral
        try {
            File font_family = new File("src/fonts/Outfit-Regular.ttf");
            
            Font font_buttons = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(16f);
            Font font_text = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(16f);
            Font font__table_text = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(12f);
            Font font_copyright = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(12f);
            Font font = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(18f);
            
            
            add_to_historic_btn.setFont(font_buttons);
            back_btn.setFont(font_buttons);
            update_btn.setFont(font_buttons);
            add_user_data_btn.setFont(font_buttons);
            clean_user_data_btn.setFont(font_buttons);
            
            
            name_label.setFont(font_text);
            age_label.setFont(font_text);
            altura_label.setFont(font_text);
            peso_label.setFont(font_text);
            
            
            name_input.setFont(font_text);
            age_input.setFont(font_text);
            altura_input.setFont(font_text);
            peso_input.setFont(font_text);
            
            calcIMC_btn.setFont(font_text);
            
            data_table.setFont(font_text);
            data_table.setSelectionBackground(new Color(167,78,79));
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        // try...catch para fonte de subtitulo
        try {
            File font_family_bold = new File("src/fonts/Outfit-Bold.ttf");
            Font font_subtitle = Font.createFont(Font.TRUETYPE_FONT,font_family_bold).deriveFont(24f);
            result_subtitle.setFont(font_subtitle);
            user_data_subtitle.setFont(font_subtitle);
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        // try...catch para fonte de IMC 
        try {
            File font_family_bold = new File("src/fonts/Outfit-Bold.ttf");
            Font font_subtitle = Font.createFont(Font.TRUETYPE_FONT,font_family_bold).deriveFont(36f);
            IMC_label.setFont(font_subtitle);
            IMCResult_label.setFont(font_subtitle);
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
            
    }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     void changeColor(JPanel hover, Color rand ){
        hover.setBackground(rand);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        close_max_min_group = new javax.swing.JPanel();
        close_btn = new javax.swing.JPanel();
        close_icon = new javax.swing.JLabel();
        max_btn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        min_btn = new javax.swing.JPanel();
        min_icon = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        submenu_panel = new javax.swing.JPanel();
        back_btn = new javax.swing.JButton();
        panels_group = new javax.swing.JTabbedPane();
        IMC_panel = new javax.swing.JPanel();
        user_data_panel = new javax.swing.JPanel();
        user_data_subtitle = new javax.swing.JLabel();
        age_input = new javax.swing.JTextField();
        calcIMC_btn = new javax.swing.JButton();
        name_label = new javax.swing.JLabel();
        age_label = new javax.swing.JLabel();
        name_input = new javax.swing.JTextField();
        male_gender_radio = new javax.swing.JRadioButton();
        other_gender_radio = new javax.swing.JRadioButton();
        gender_label = new javax.swing.JLabel();
        female_gender_radio = new javax.swing.JRadioButton();
        altura_label = new javax.swing.JLabel();
        altura_input = new javax.swing.JTextField();
        peso_input = new javax.swing.JTextField();
        peso_label = new javax.swing.JLabel();
        user_imc_panel = new javax.swing.JPanel();
        user_img = new javax.swing.JLabel();
        div_bottom = new javax.swing.JLabel();
        div_top = new javax.swing.JLabel();
        IMC_Avaluation_label = new javax.swing.JLabel();
        IMC_label = new javax.swing.JLabel();
        IMCResult_label = new javax.swing.JLabel();
        result_subtitle = new javax.swing.JLabel();
        add_to_historic_btn = new javax.swing.JButton();
        clean_user_data_btn = new javax.swing.JButton();
        Historic_panel = new javax.swing.JPanel();
        historic_panel_container = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        data_table = new javax.swing.JTable();
        update_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        add_user_data_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BMI Calculator - por Manuel Jaime");
        setUndecorated(true);
        setResizable(false);

        header.setBackground(new java.awt.Color(73, 158, 59));
        header.setPreferredSize(new java.awt.Dimension(800, 50));
        header.setRequestFocusEnabled(false);

        close_max_min_group.setBackground(new java.awt.Color(107, 190, 89));
        close_max_min_group.setPreferredSize(new java.awt.Dimension(150, 50));

        close_btn.setBackground(new java.awt.Color(107, 190, 89));
        close_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        close_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                close_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                close_btnMouseExited(evt);
            }
        });
        close_btn.setLayout(new java.awt.BorderLayout());

        close_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fechar.png"))); // NOI18N
        close_btn.add(close_icon, java.awt.BorderLayout.CENTER);

        max_btn.setBackground(new java.awt.Color(107, 190, 89));
        max_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        max_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                max_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                max_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                max_btnMouseExited(evt);
            }
        });
        max_btn.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/maximize-o-tamanho.png"))); // NOI18N
        max_btn.add(jLabel2, java.awt.BorderLayout.CENTER);

        min_btn.setBackground(new java.awt.Color(107, 190, 89));
        min_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        min_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                min_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                min_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                min_btnMouseExited(evt);
            }
        });
        min_btn.setLayout(new java.awt.BorderLayout());

        min_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        min_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/menos.png"))); // NOI18N
        min_btn.add(min_icon, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout close_max_min_groupLayout = new javax.swing.GroupLayout(close_max_min_group);
        close_max_min_group.setLayout(close_max_min_groupLayout);
        close_max_min_groupLayout.setHorizontalGroup(
            close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, close_max_min_groupLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(min_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(max_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        close_max_min_groupLayout.setVerticalGroup(
            close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(close_max_min_groupLayout.createSequentialGroup()
                .addGroup(close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(close_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(max_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(min_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 732, Short.MAX_VALUE)
                .addComponent(close_max_min_group, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(close_max_min_group, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        body.setBackground(new java.awt.Color(255, 255, 255));

        submenu_panel.setBackground(new java.awt.Color(255, 255, 255));

        back_btn.setBackground(new java.awt.Color(26, 185, 33));
        back_btn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        back_btn.setForeground(new java.awt.Color(255, 255, 255));
        back_btn.setText("Voltar");
        back_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnback_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout submenu_panelLayout = new javax.swing.GroupLayout(submenu_panel);
        submenu_panel.setLayout(submenu_panelLayout);
        submenu_panelLayout.setHorizontalGroup(
            submenu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submenu_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        submenu_panelLayout.setVerticalGroup(
            submenu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submenu_panelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(back_btn)
                .addContainerGap())
        );

        IMC_panel.setBackground(new java.awt.Color(255, 255, 255));

        user_data_panel.setBackground(new java.awt.Color(255, 255, 255));
        user_data_panel.setForeground(new java.awt.Color(51, 51, 51));

        user_data_subtitle.setBackground(new java.awt.Color(51, 51, 51));
        user_data_subtitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        user_data_subtitle.setForeground(new java.awt.Color(51, 51, 51));
        user_data_subtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        user_data_subtitle.setText("Dados do Usuário");

        age_input.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        age_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                age_inputKeyTyped(evt);
            }
        });

        calcIMC_btn.setBackground(new java.awt.Color(51, 153, 0));
        calcIMC_btn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        calcIMC_btn.setForeground(new java.awt.Color(255, 255, 255));
        calcIMC_btn.setText("Calcular");
        calcIMC_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcIMC_btnActionPerformed(evt);
            }
        });
        calcIMC_btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calcIMC_btnKeyPressed(evt);
            }
        });

        name_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        name_label.setForeground(new java.awt.Color(51, 51, 51));
        name_label.setText("Nome:");

        age_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        age_label.setForeground(new java.awt.Color(51, 51, 51));
        age_label.setText("Idade:");

        male_gender_radio.setForeground(new java.awt.Color(51, 51, 51));
        male_gender_radio.setSelected(true);
        male_gender_radio.setText("Masculino");
        male_gender_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                male_gender_radioActionPerformed(evt);
            }
        });

        other_gender_radio.setForeground(new java.awt.Color(51, 51, 51));
        other_gender_radio.setText("Outro");
        other_gender_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other_gender_radioActionPerformed(evt);
            }
        });

        gender_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        gender_label.setForeground(new java.awt.Color(51, 51, 51));
        gender_label.setText("Sexo:");

        female_gender_radio.setForeground(new java.awt.Color(51, 51, 51));
        female_gender_radio.setText("Feminino");
        female_gender_radio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                female_gender_radioActionPerformed(evt);
            }
        });

        altura_label.setBackground(new java.awt.Color(255, 255, 255));
        altura_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        altura_label.setForeground(new java.awt.Color(51, 51, 51));
        altura_label.setText("Altura (cm) :");

        altura_input.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        altura_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                altura_inputKeyTyped(evt);
            }
        });

        peso_input.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        peso_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peso_inputActionPerformed(evt);
            }
        });
        peso_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                peso_inputKeyTyped(evt);
            }
        });

        peso_label.setBackground(new java.awt.Color(255, 255, 255));
        peso_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        peso_label.setForeground(new java.awt.Color(51, 51, 51));
        peso_label.setText("Peso (kg) :");

        javax.swing.GroupLayout user_data_panelLayout = new javax.swing.GroupLayout(user_data_panel);
        user_data_panel.setLayout(user_data_panelLayout);
        user_data_panelLayout.setHorizontalGroup(
            user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_data_panelLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(user_data_subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, user_data_panelLayout.createSequentialGroup()
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(user_data_panelLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(age_input))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, user_data_panelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(user_data_panelLayout.createSequentialGroup()
                                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(altura_label, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(altura_input, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(peso_input, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(peso_label, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(calcIMC_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(user_data_panelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(user_data_panelLayout.createSequentialGroup()
                                        .addComponent(male_gender_radio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(female_gender_radio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(other_gender_radio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(user_data_panelLayout.createSequentialGroup()
                                        .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(name_input))
                                    .addGroup(user_data_panelLayout.createSequentialGroup()
                                        .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gender_label, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(age_label, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(20, 20, 20))
        );
        user_data_panelLayout.setVerticalGroup(
            user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_data_panelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(user_data_subtitle)
                .addGap(22, 22, 22)
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_input, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(age_label, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(age_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(gender_label, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(male_gender_radio)
                    .addComponent(other_gender_radio)
                    .addComponent(female_gender_radio))
                .addGap(45, 45, 45)
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(altura_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peso_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(user_data_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(altura_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peso_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(calcIMC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        user_imc_panel.setBackground(new java.awt.Color(51, 51, 51));

        user_img.setBackground(new java.awt.Color(255, 153, 0));
        user_img.setForeground(new java.awt.Color(255, 255, 255));
        user_img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        user_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/man_icon.png"))); // NOI18N

        div_bottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        div_top.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        IMC_Avaluation_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        IMC_Avaluation_label.setForeground(new java.awt.Color(255, 255, 255));
        IMC_Avaluation_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IMC_Avaluation_label.setText("Avaliação:");

        IMC_label.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        IMC_label.setForeground(new java.awt.Color(255, 255, 255));
        IMC_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IMC_label.setText("IMC :");

        IMCResult_label.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        IMCResult_label.setForeground(new java.awt.Color(255, 255, 255));
        IMCResult_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IMCResult_label.setText("0");

        result_subtitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        result_subtitle.setForeground(new java.awt.Color(0, 204, 0));
        result_subtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        result_subtitle.setText("Resultados");

        add_to_historic_btn.setText("ADICIONAR AO HISTÓRICO DE IMC");
        add_to_historic_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_to_historic_btnActionPerformed(evt);
            }
        });

        clean_user_data_btn.setBackground(new java.awt.Color(255, 0, 0));
        clean_user_data_btn.setForeground(new java.awt.Color(255, 255, 255));
        clean_user_data_btn.setText("LIMPAR CAMPOS DE ENTRADA");
        clean_user_data_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_user_data_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout user_imc_panelLayout = new javax.swing.GroupLayout(user_imc_panel);
        user_imc_panel.setLayout(user_imc_panelLayout);
        user_imc_panelLayout.setHorizontalGroup(
            user_imc_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_imc_panelLayout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addGroup(user_imc_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, user_imc_panelLayout.createSequentialGroup()
                        .addGroup(user_imc_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(div_top, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IMC_Avaluation_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, user_imc_panelLayout.createSequentialGroup()
                                .addComponent(IMC_label, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(IMCResult_label, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(div_bottom, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(add_to_historic_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clean_user_data_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, user_imc_panelLayout.createSequentialGroup()
                        .addComponent(result_subtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, user_imc_panelLayout.createSequentialGroup()
                        .addComponent(user_img, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166))))
        );
        user_imc_panelLayout.setVerticalGroup(
            user_imc_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(user_imc_panelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(result_subtitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(user_img)
                .addGap(18, 18, 18)
                .addComponent(div_top, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(user_imc_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IMC_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IMCResult_label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(div_bottom)
                .addGap(18, 18, 18)
                .addComponent(IMC_Avaluation_label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(add_to_historic_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clean_user_data_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout IMC_panelLayout = new javax.swing.GroupLayout(IMC_panel);
        IMC_panel.setLayout(IMC_panelLayout);
        IMC_panelLayout.setHorizontalGroup(
            IMC_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IMC_panelLayout.createSequentialGroup()
                .addComponent(user_data_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(user_imc_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IMC_panelLayout.setVerticalGroup(
            IMC_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(user_data_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(user_imc_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panels_group.addTab("Calculadora IMC", IMC_panel);

        historic_panel_container.setBackground(new java.awt.Color(255, 255, 255));
        historic_panel_container.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historic_panel_containerMouseClicked(evt);
            }
        });

        data_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "IDADE", "SEXO", "ALTURA", "PESO", "IMC", "SITUAÇÃO"
            }
        ));
        data_table.setGridColor(new java.awt.Color(255, 255, 255));
        data_table.setRowHeight(50);
        data_table.setShowGrid(false);
        jScrollPane1.setViewportView(data_table);

        update_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update_btn.setText("EDITAR");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });

        delete_btn.setBackground(new java.awt.Color(255, 0, 0));
        delete_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete_btn.setForeground(new java.awt.Color(255, 255, 255));
        delete_btn.setText("APAGAR");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        add_user_data_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add_user_data_btn.setText("NOVO ");
        add_user_data_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_user_data_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout historic_panel_containerLayout = new javax.swing.GroupLayout(historic_panel_container);
        historic_panel_container.setLayout(historic_panel_containerLayout);
        historic_panel_containerLayout.setHorizontalGroup(
            historic_panel_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historic_panel_containerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_user_data_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        historic_panel_containerLayout.setVerticalGroup(
            historic_panel_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historic_panel_containerLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(historic_panel_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_user_data_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Historic_panelLayout = new javax.swing.GroupLayout(Historic_panel);
        Historic_panel.setLayout(Historic_panelLayout);
        Historic_panelLayout.setHorizontalGroup(
            Historic_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historic_panel_container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Historic_panelLayout.setVerticalGroup(
            Historic_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historic_panel_container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panels_group.addTab("Historico de IMC", Historic_panel);

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(submenu_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panels_group)
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addComponent(submenu_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panels_group)
                .addContainerGap())
        );

        getContentPane().add(body, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void close_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseClicked
        dispose();
    }//GEN-LAST:event_close_btnMouseClicked

    private void close_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseEntered
        changeColor(close_btn, Color.red);
    }//GEN-LAST:event_close_btnMouseEntered

    private void close_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseExited
        changeColor(close_btn, new Color(107,190,89));
    }//GEN-LAST:event_close_btnMouseExited

    private void max_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseClicked
        if(this.getExtendedState() != CalcBMISection.MAXIMIZED_BOTH){
            this.setExtendedState(CalcBMISection.MAXIMIZED_BOTH);
        }else{
            this.setExtendedState(CalcBMISection.NORMAL);
        }
    }//GEN-LAST:event_max_btnMouseClicked

    private void max_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseEntered
        changeColor(max_btn, new Color(140, 223, 120));
    }//GEN-LAST:event_max_btnMouseEntered

    private void max_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseExited
        changeColor(max_btn, new Color(107,190,89));
    }//GEN-LAST:event_max_btnMouseExited

    private void min_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseClicked
        this.setExtendedState(CalcBMISection.ICONIFIED);
    }//GEN-LAST:event_min_btnMouseClicked

    private void min_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseEntered

        changeColor(min_btn, new Color(140, 223, 120));
    }//GEN-LAST:event_min_btnMouseEntered

    private void min_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseExited
        changeColor(min_btn, new Color(107,190,89));
    }//GEN-LAST:event_min_btnMouseExited

    private void back_btnback_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnback_btnActionPerformed

        new StartScreen().setVisible(true);
        dispose();
    }//GEN-LAST:event_back_btnback_btnActionPerformed

    private void age_inputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_age_inputKeyTyped
        age_input.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_age_inputKeyTyped

    private void calcIMC_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcIMC_btnActionPerformed
        
        String nome = name_input.getText();
        
  
        double altura = Double.parseDouble(altura_input.getText());
        altura /= 100;
        double peso = Double.parseDouble(peso_input.getText());

        double IMC = peso / (altura*altura);
        
        
        DecimalFormat df = new DecimalFormat();
        String resultado = df.format(IMC);
        IMCResult_label.setText(resultado);
        
                
            if(IMC < 18.4){
                IMC_Avaluation_label.setForeground(Color.red);
                IMC_Avaluation_label.setText("Abaixo do Peso");

            }else if(IMC > 18.4 && IMC < 25 ){
                IMC_Avaluation_label.setForeground(Color.green );
                IMC_Avaluation_label.setText("Peso Normal");

            }else if(IMC > 24 && IMC < 30){
                IMC_Avaluation_label.setForeground(Color.red);
                IMC_Avaluation_label.setText("Sobrepeso!");

            }else if(IMC > 29.9 && IMC < 35){
                IMC_Avaluation_label.setForeground(Color.red);
                IMC_Avaluation_label.setText("Obesidade grau 1! ");

            }else if(IMC > 34.9 && IMC < 40){
                IMC_Avaluation_label.setForeground(Color.red);
                IMC_Avaluation_label.setText("Obesidade grau 2! ");
            }
            else if(IMC > 40){
                IMC_Avaluation_label.setForeground(Color.red);
                IMC_Avaluation_label.setText("Obesidade mórbida!");
            }
            
            else{
                if(name_input.getText().isEmpty() || age_input.getText().isEmpty() || altura_input.getText().isEmpty() || peso_input.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Os camposmestão vazios!");
                }
            }
            
            
        
    }//GEN-LAST:event_calcIMC_btnActionPerformed

    private void calcIMC_btnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcIMC_btnKeyPressed
       
    }//GEN-LAST:event_calcIMC_btnKeyPressed
    
    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // pegar o table model
        DefaultTableModel tblModel = (DefaultTableModel) data_table.getModel();
        if(data_table.getSelectedColumnCount() == 1){
            // se uma linha for seleccionada, atualizar
            // vamos pegar o texto de cada campo de entrada e as suas posições

            String name = name_input.getText();
            String age = age_input.getText();
            String altura = altura_input.getText();
            
            String peso = peso_input.getText();
            String imc = IMCResult_label.getText();
            String status = IMC_Avaluation_label.getText();

            // definir como atualizado o valor na linha da tabela
            
            
            
            tblModel.setValueAt(name, data_table.getSelectedRow(), 0);
            tblModel.setValueAt(age, data_table.getSelectedRow(), 1);
            tblModel.setValueAt("Indefinido", data_table.getSelectedRow(), 2);
            tblModel.setValueAt(altura, data_table.getSelectedRow(), 3);
            tblModel.setValueAt(peso, data_table.getSelectedRow(), 4);
            tblModel.setValueAt(imc, data_table.getSelectedRow(), 5);
            tblModel.setValueAt(status, data_table.getSelectedRow(), 6);

            // mostrar messagem de atualização
            JOptionPane.showMessageDialog(this, "Linha atualizada!");

        }else{
            if(data_table.getRowCount() == 0){ // se a tabela estiver vazia , exibbir mensagem
                JOptionPane.showMessageDialog(this, "A tabela está vazia!");
            }

            else{ // se a tabela não está vazia mas nenhuma foi seleccionada ou várias tabelas selecionadas, exibir mensagem
                JOptionPane.showMessageDialog(this, "Selecione uma linha para atualizar!");

            }
        }

    }//GEN-LAST:event_update_btnActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        // pegr o primeiro modelo jtablee
        DefaultTableModel tblModel = (DefaultTableModel) data_table.getModel();

        // condição para apagar linha de dados
        if(data_table.getSelectedColumnCount() == 1){
            //if
            tblModel.removeRow(data_table.getSelectedRow());
            JOptionPane.showMessageDialog(this, "Dados apagados!");
        }else{
            if(data_table.getRowCount() == 0){ // se a tabela estiver vazia , exibbir mensagem
                JOptionPane.showMessageDialog(this, "A tabela está vazia!");
            }

            else{ // se a tabela não está vazia mas nenhuma foi seleccionada ou várias tabelas selecionadas, exibir mensagem
                JOptionPane.showMessageDialog(this, "Selecione uma linha para apagar!");

            }
        }

    }//GEN-LAST:event_delete_btnActionPerformed

    private void add_to_historic_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_to_historic_btnActionPerformed
        // código para carregar o dados do usuário na tabela
        // validação para não deixar dados blank
        
        int idade = Integer.parseInt(age_input.getText());
        double altura = Double.parseDouble(altura_input.getText());
        altura /= 100;
        double peso = Double.parseDouble(peso_input.getText());

        double IMC = peso / (altura*altura);
        
        
        
        DecimalFormat df = new DecimalFormat();
        String resultado = df.format(IMC);
        IMCResult_label.setText(resultado);
        
        
        if(Double.isNaN(IMC ) || idade >= 100){
            JOptionPane.showMessageDialog(this, "Tente de novo!");
            
            name_input.setText("");
            age_input.setText("");
            altura_input.setText("");
            peso_input.setText("");
            IMCResult_label.setText("0");
            IMC_Avaluation_label.setForeground(Color.white);
            IMC_Avaluation_label.setText("Avaliação");
        }
        else if(name_input.getText().isEmpty() || age_input.getText().isEmpty() || altura_input.getText().isEmpty() || peso_input.getText().isEmpty() || IMCResult_label.getText().isEmpty() || IMC_Avaluation_label.getText().isEmpty()){
            // se qualquer um dos três campos deixar blank do que mostrar mensagem
            //senao...
            JOptionPane.showMessageDialog(this, "Por favor Preencha todos os campos");
        }else{
            //armazena os dados num vector
            
            
            String[] data = {
                name_input.getText(),
                age_input.getText(),
                "Undefined",
                altura_input.getText(),
                peso_input.getText(),
                IMCResult_label.getText(),
                IMC_Avaluation_label.getText()
                
            };
            
            if(male_gender_radio.isSelected()){
                data[2] = "Masculino";
            }else{
                if(female_gender_radio.isSelected()){
                    data[2] = "Feminino";
                }
                else{
                    data[2] = "Indefinido";
                }
            }

            DefaultTableModel tblModel = (DefaultTableModel)data_table.getModel();
            // adiciona dados no array de Strings

            tblModel.addRow(data); // linha adicionada

            JOptionPane.showMessageDialog(this, "Dados de "+ name_input.getText()+" Adicionados com sucesso!");
            // messagem a dizer que adicionou com sucesso
            // JOptionPane.showMessageDialog(this, "Adicionado com sucesso!");
            // limpa o os campos de texto para uma nova entrada de dados
            name_input.setText("");
            age_input.setText("");
            altura_input.setText("");
            peso_input.setText("");
            IMCResult_label.setText("");
            
            IMC_Avaluation_label.setForeground(Color.white);
            IMC_Avaluation_label.setText("Avaliação:");
            

        }

    }//GEN-LAST:event_add_to_historic_btnActionPerformed

    private void altura_inputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_altura_inputKeyTyped
        altura_input.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_altura_inputKeyTyped

    private void peso_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peso_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peso_inputActionPerformed

    private void peso_inputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peso_inputKeyTyped
        peso_input.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
    }//GEN-LAST:event_peso_inputKeyTyped

    private void male_gender_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_male_gender_radioActionPerformed
        female_gender_radio.setSelected(false);
        other_gender_radio.setSelected(false);
        user_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/man_icon.png"))); 

    }//GEN-LAST:event_male_gender_radioActionPerformed

    private void female_gender_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_female_gender_radioActionPerformed
        male_gender_radio.setSelected(false);
        other_gender_radio.setSelected(false);
        user_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/woman_icon.png"))); 

    }//GEN-LAST:event_female_gender_radioActionPerformed

    private void other_gender_radioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other_gender_radioActionPerformed
        male_gender_radio.setSelected(false);
        female_gender_radio.setSelected(false);
        user_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/anonymous_icon.png")));
    }//GEN-LAST:event_other_gender_radioActionPerformed

    private void historic_panel_containerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historic_panel_containerMouseClicked
        DefaultTableModel tblModel = (DefaultTableModel) data_table.getModel();

        // condição para apagar linha de dados
        if(data_table.getSelectedColumnCount() == 1){
            data_table.setFocusable(false);   
        }
    }//GEN-LAST:event_historic_panel_containerMouseClicked

    private void add_user_data_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_user_data_btnActionPerformed
        panels_group.setSelectedIndex(0);
        
    }//GEN-LAST:event_add_user_data_btnActionPerformed

    private void clean_user_data_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_user_data_btnActionPerformed
        // limpa o os campos de texto para uma nova entrada de dados
        if(name_input.getText().isEmpty() || age_input.getText().isEmpty() || altura_input.getText().isEmpty() || peso_input.getText().isEmpty() || IMCResult_label.getText().isEmpty() || IMC_Avaluation_label.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Os campos já estão vazios!");
        }else{
            name_input.setText("");
            age_input.setText("");
            altura_input.setText("");
            peso_input.setText("");
            IMCResult_label.setText("");
            
            IMC_Avaluation_label.setForeground(Color.white);
            IMC_Avaluation_label.setText("0");
        }
    }//GEN-LAST:event_clean_user_data_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IMCSection_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IMCSection_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IMCSection_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IMCSection_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IMCSection_Screen().setVisible(true);
            }
        });
    }
    
    void setIcon(){
        // setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("src/icons/logo-1.png")));
        setIconImage(Toolkit.getDefaultToolkit().getImage("src/icons/logo-1.png"));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Historic_panel;
    private javax.swing.JLabel IMCResult_label;
    private javax.swing.JLabel IMC_Avaluation_label;
    private javax.swing.JLabel IMC_label;
    private javax.swing.JPanel IMC_panel;
    private javax.swing.JButton add_to_historic_btn;
    private javax.swing.JButton add_user_data_btn;
    private javax.swing.JTextField age_input;
    private javax.swing.JLabel age_label;
    private javax.swing.JTextField altura_input;
    private javax.swing.JLabel altura_label;
    private javax.swing.JButton back_btn;
    private javax.swing.JPanel body;
    private javax.swing.JButton calcIMC_btn;
    private javax.swing.JButton clean_user_data_btn;
    private javax.swing.JPanel close_btn;
    private javax.swing.JLabel close_icon;
    private javax.swing.JPanel close_max_min_group;
    private javax.swing.JTable data_table;
    private javax.swing.JButton delete_btn;
    private javax.swing.JLabel div_bottom;
    private javax.swing.JLabel div_top;
    private javax.swing.JRadioButton female_gender_radio;
    private javax.swing.JLabel gender_label;
    private javax.swing.JPanel header;
    private javax.swing.JPanel historic_panel_container;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton male_gender_radio;
    private javax.swing.JPanel max_btn;
    private javax.swing.JPanel min_btn;
    private javax.swing.JLabel min_icon;
    private javax.swing.JTextField name_input;
    private javax.swing.JLabel name_label;
    private javax.swing.JRadioButton other_gender_radio;
    private javax.swing.JTabbedPane panels_group;
    private javax.swing.JTextField peso_input;
    private javax.swing.JLabel peso_label;
    private javax.swing.JLabel result_subtitle;
    private javax.swing.JPanel submenu_panel;
    private javax.swing.JButton update_btn;
    private javax.swing.JPanel user_data_panel;
    private javax.swing.JLabel user_data_subtitle;
    private javax.swing.JPanel user_imc_panel;
    private javax.swing.JLabel user_img;
    // End of variables declaration//GEN-END:variables

    
}
