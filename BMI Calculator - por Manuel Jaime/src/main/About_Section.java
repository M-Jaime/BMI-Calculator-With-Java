package main;

import fonts.HomeScreen;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JPanel;

/**
 *
 * @author MANUEL JAIME
 */
public class About_Section extends javax.swing.JFrame {

    /**
     * Creates new form About_Section
     */
    public About_Section() {
        initComponents();
        
        setIcon();
   
        
         // try...catch para a fonte geral
        try {
            File font_family_medium = new File("src/fonts/Outfit-Medium.ttf");            
            Font font_text = Font.createFont(Font.TRUETYPE_FONT,font_family_medium).deriveFont(16f);
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
         // try...catch para a fonte para os botoes
        try {
            File font_family = new File("src/fonts/Outfit-Regular.ttf");
            Font font_buttons = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(16f);             
            Font font_text_area = Font.createFont(Font.TRUETYPE_FONT,font_family).deriveFont(14f);             
                       
            
            back_btn.setFont(font_buttons);
            text_area.setFont(font_text_area);
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        // try...catch para fonte de subtitulo
        try {
            File font_family_bold = new File("src/fonts/Outfit-Bold.ttf");
            Font font_subtitle = Font.createFont(Font.TRUETYPE_FONT,font_family_bold).deriveFont(32f);
            Font font_title = Font.createFont(Font.TRUETYPE_FONT,font_family_bold).deriveFont(24f); 
            panel_title.setFont(font_title);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        //strong> (IMC) é uma medida que relaciona o peso <br> e altura de uma pessoa para avaliar se ela está dentro de faixas <br> consideradas saudáveis. Ele é calculado dividindo o peso <br> (em quilogramas) pela altura ao quadrado (em metros). O IMC é usado para indicar se uma pessoa está com <br> o peso ideal, peso saudável, sobrepeso ou obesidade.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    void changeColor(JPanel hover, Color rand ){
        hover.setBackground(rand);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        launcher1 = new main.Launcher();
        header = new javax.swing.JPanel();
        close_max_min_group = new javax.swing.JPanel();
        close_btn = new javax.swing.JPanel();
        close_icon = new javax.swing.JLabel();
        max_btn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        min_btn = new javax.swing.JPanel();
        min_icon = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        img_container = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        back_btn = new javax.swing.JButton();
        submenu_panel = new javax.swing.JPanel();
        content_panel = new javax.swing.JPanel();
        panel_title = new javax.swing.JLabel();
        scroll_pane = new javax.swing.JScrollPane();
        text_area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BMI Calculator - por Manuel Jaime");
        setUndecorated(true);
        setResizable(false);

        header.setBackground(new java.awt.Color(73, 158, 59));
        header.setPreferredSize(new java.awt.Dimension(800, 50));
        header.setRequestFocusEnabled(false);
        header.setLayout(new java.awt.BorderLayout());

        close_max_min_group.setBackground(new java.awt.Color(107, 190, 89));
        close_max_min_group.setPreferredSize(new java.awt.Dimension(150, 50));

        close_btn.setBackground(new java.awt.Color(107, 190, 89));
        close_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        close_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                close_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                close_btnMouseExited(evt);
            }
        });
        close_btn.setLayout(new java.awt.BorderLayout());

        close_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fechar.png"))); // NOI18N
        close_btn.add(close_icon, java.awt.BorderLayout.CENTER);

        max_btn.setBackground(new java.awt.Color(107, 190, 89));
        max_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        max_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                max_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                max_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                max_btnMouseExited(evt);
            }
        });
        max_btn.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/maximize-o-tamanho.png"))); // NOI18N
        max_btn.add(jLabel2, java.awt.BorderLayout.CENTER);

        min_btn.setBackground(new java.awt.Color(107, 190, 89));
        min_btn.setPreferredSize(new java.awt.Dimension(50, 50));
        min_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                min_btnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                min_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                min_btnMouseExited(evt);
            }
        });
        min_btn.setLayout(new java.awt.BorderLayout());

        min_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        min_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/menos.png"))); // NOI18N
        min_btn.add(min_icon, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout close_max_min_groupLayout = new javax.swing.GroupLayout(close_max_min_group);
        close_max_min_group.setLayout(close_max_min_groupLayout);
        close_max_min_groupLayout.setHorizontalGroup(
            close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, close_max_min_groupLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(min_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(max_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        close_max_min_groupLayout.setVerticalGroup(
            close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(close_max_min_groupLayout.createSequentialGroup()
                .addGroup(close_max_min_groupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(close_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(max_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(min_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        header.add(close_max_min_group, java.awt.BorderLayout.CENTER);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        container.setBackground(new java.awt.Color(255, 255, 255));
        container.setLayout(new java.awt.BorderLayout());

        img_container.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modified/Sport family-pana.png"))); // NOI18N

        back_btn.setBackground(new java.awt.Color(26, 185, 33));
        back_btn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        back_btn.setForeground(new java.awt.Color(255, 255, 255));
        back_btn.setText("Voltar");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout img_containerLayout = new javax.swing.GroupLayout(img_container);
        img_container.setLayout(img_containerLayout);
        img_containerLayout.setHorizontalGroup(
            img_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
            .addGroup(img_containerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        img_containerLayout.setVerticalGroup(
            img_containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, img_containerLayout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        container.add(img_container, java.awt.BorderLayout.CENTER);

        getContentPane().add(container, java.awt.BorderLayout.CENTER);

        submenu_panel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout submenu_panelLayout = new javax.swing.GroupLayout(submenu_panel);
        submenu_panel.setLayout(submenu_panelLayout);
        submenu_panelLayout.setHorizontalGroup(
            submenu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1086, Short.MAX_VALUE)
        );
        submenu_panelLayout.setVerticalGroup(
            submenu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );

        getContentPane().add(submenu_panel, java.awt.BorderLayout.PAGE_END);

        content_panel.setBackground(new java.awt.Color(255, 255, 255));

        panel_title.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        panel_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panel_title.setText("O que é o IMC?");

        scroll_pane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        text_area.setEditable(false);
        text_area.setBackground(new java.awt.Color(255, 255, 255));
        text_area.setColumns(20);
        text_area.setRows(5);
        text_area.setText("\nO Índice de Massa Corporal (IMC) é uma medida que relaciona o peso e a altura de uma pessoa. \nEle é calculado dividindo-se o peso (em quilogramas) pelo quadrado da altura (em metros). \nA fórmula matemática para calcular o IMC é a seguinte:\nO IMC é frequentemente utilizado como uma ferramenta de triagem para avaliar se uma pessoa \nestá em um peso saudável em relação à sua altura. Ele fornece uma indicação geral de gordura \ncorporal e é amplamente utilizado em estudos epidemiológicos e em avaliações de saúde pública.\nOs intervalos de IMC comumente aceitos e suas interpretações são os seguintes:\n\n               Abaixo de 18,5: Abaixo do peso\n               18,5 - 24,9: Peso normal\n               25,0 - 29,9: Sobrepeso\n               30,0 e acima: Obesidade\n\n\nNo entanto, é importante notar que o IMC é uma medida simplificada e não leva em consideração \noutros fatores importantes, como a composição corporal (proporção de massa muscular, gordura\n corporal, etc.), distribuição de gordura corporal e características individuais. Portanto, embora seja\n útil como uma ferramenta inicial de avaliação, não deve ser o único critério usado para determinar\n a saúde de uma pessoa. Sempre é recomendável buscar a orientação de um profissional de saúde \npara uma avaliação mais completa e precisa.\n\nO cálculo do Índice de Massa Corporal (IMC) é o mesmo tanto para crianças quanto para adultos: \né a relação entre o peso e a altura. No entanto, a interpretação do IMC para crianças é diferente da \ninterpretação para adultos. Isso se deve ao fato de que o corpo das crianças está em constante\ncrescimento e desenvolvimento, e as proporções normais de peso e altura variam significativamente \ncom a idade e o sexo.\n\nPara calcular e interpretar o IMC de uma criança, são utilizadas tabelas de percentis específicas para \nidade e sexo. Essas tabelas comparam o IMC da criança com o IMC de outras crianças da mesma idade \ne sexo, permitindo uma avaliação do peso em relação à população de referência.\nGeralmente, os percentis são agrupados em categorias, semelhantes às usadas para adultos, como abaixo\n do peso, peso normal, sobrepeso e obesidade. No entanto, os limites dos percentis variam de acordo com \na idade e o sexo da criança.\n\nPortanto, ao calcular o IMC de uma criança, é importante considerar não apenas o valor numérico do IMC, \nmas também a idade e o sexo da criança, e comparar esse valor com as tabelas de percentis específicas para\n obter uma avaliação mais precisa do peso em relação à população de referência.\n\n\n");
        text_area.setWrapStyleWord(true);
        scroll_pane.setViewportView(text_area);

        javax.swing.GroupLayout content_panelLayout = new javax.swing.GroupLayout(content_panel);
        content_panel.setLayout(content_panelLayout);
        content_panelLayout.setHorizontalGroup(
            content_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(content_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_panelLayout.createSequentialGroup()
                        .addComponent(scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, content_panelLayout.createSequentialGroup()
                        .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190))))
        );
        content_panelLayout.setVerticalGroup(
            content_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(content_panelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(panel_title, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(content_panel, java.awt.BorderLayout.LINE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void close_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseClicked
        dispose();
        
    }//GEN-LAST:event_close_btnMouseClicked

    private void close_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseEntered
        changeColor(close_btn, Color.red);
    }//GEN-LAST:event_close_btnMouseEntered

    private void close_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close_btnMouseExited
        changeColor(close_btn, new Color(107,190,89));
    }//GEN-LAST:event_close_btnMouseExited

    private void max_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseClicked
        if(this.getExtendedState() != HomeScreen.MAXIMIZED_BOTH){
            this.setExtendedState(HomeScreen.MAXIMIZED_BOTH);
        }else{
            this.setExtendedState(HomeScreen.NORMAL);
        }
    }//GEN-LAST:event_max_btnMouseClicked

    private void max_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseEntered
        changeColor(max_btn, new Color(140, 223, 120));
    }//GEN-LAST:event_max_btnMouseEntered

    private void max_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_max_btnMouseExited
        changeColor(max_btn, new Color(107,190,89));
    }//GEN-LAST:event_max_btnMouseExited

    private void min_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseClicked
        this.setExtendedState(HomeScreen.ICONIFIED);
    }//GEN-LAST:event_min_btnMouseClicked

    private void min_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseEntered

        changeColor(min_btn, new Color(140, 223, 120));
    }//GEN-LAST:event_min_btnMouseEntered

    private void min_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min_btnMouseExited
        changeColor(min_btn, new Color(107,190,89));
    }//GEN-LAST:event_min_btnMouseExited

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        new StartScreen().setVisible(true);
        dispose();
    }//GEN-LAST:event_back_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(About_Section.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(About_Section.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(About_Section.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(About_Section.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new About_Section().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_btn;
    private javax.swing.JPanel close_btn;
    private javax.swing.JLabel close_icon;
    private javax.swing.JPanel close_max_min_group;
    private javax.swing.JPanel container;
    private javax.swing.JPanel content_panel;
    private javax.swing.JPanel header;
    private javax.swing.JPanel img_container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private main.Launcher launcher1;
    private javax.swing.JPanel max_btn;
    private javax.swing.JPanel min_btn;
    private javax.swing.JLabel min_icon;
    private javax.swing.JLabel panel_title;
    private javax.swing.JScrollPane scroll_pane;
    private javax.swing.JPanel submenu_panel;
    private javax.swing.JTextArea text_area;
    // End of variables declaration//GEN-END:variables

    void setIcon(){
        // setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("src/icons/logo-1.png")));
        setIconImage(Toolkit.getDefaultToolkit().getImage("src/icons/logo-1.png"));
    }
    
}
